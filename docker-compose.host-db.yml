version: '3.8'

services:
  # Monitor Dashboard - using existing image
  monitor-dashboard:
    image: agent_monitor-monitor:latest
    command: python main_production_server.py
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-}@host.docker.internal:5432/${POSTGRES_DB:-agent_monitor}
    volumes:
      - agent_data:/app/data
    networks:
      - agent-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/agents/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Agent 1 - LLM Agent
  agent-1:
    image: agent_monitor-test-agent:latest
    command: python agent_production_deployment.py
    restart: unless-stopped
    environment:
      - AGENT_NAME=ðŸ¤– LLM Agent 1
      - AGENT_TYPE=LLM_AGENT
      - WORKLOAD_TYPE=llm
      - AGENT_ENVIRONMENT=DOCKER
      - MONITOR_URL=http://monitor-dashboard:8000
      - PYTHONPATH=/app
    networks:
      - agent-network
    depends_on:
      - monitor-dashboard

  # Agent 2 - API Agent  
  agent-2:
    image: agent_monitor-test-agent:latest
    command: python agent_production_deployment.py
    restart: unless-stopped
    environment:
      - AGENT_NAME=ðŸ”Œ API Agent
      - AGENT_TYPE=API_AGENT
      - WORKLOAD_TYPE=api
      - AGENT_ENVIRONMENT=DOCKER
      - MONITOR_URL=http://monitor-dashboard:8000
      - PYTHONPATH=/app
    networks:
      - agent-network
    depends_on:
      - monitor-dashboard

  # Agent 3 - Data Agent
  agent-3:
    image: agent_monitor-test-agent:latest
    command: python agent_production_deployment.py
    restart: unless-stopped
    environment:
      - AGENT_NAME=ðŸ“Š Data Agent
      - AGENT_TYPE=DATA_AGENT
      - WORKLOAD_TYPE=data
      - AGENT_ENVIRONMENT=DOCKER
      - MONITOR_URL=http://monitor-dashboard:8000
      - PYTHONPATH=/app
    networks:
      - agent-network
    depends_on:
      - monitor-dashboard

  # Agent 4 - ML Agent
  agent-4:
    image: agent_monitor-test-agent:latest
    command: python agent_production_deployment.py
    restart: unless-stopped
    environment:
      - AGENT_NAME=ðŸ§  ML Agent
      - AGENT_TYPE=CUSTOM
      - WORKLOAD_TYPE=ml
      - AGENT_ENVIRONMENT=DOCKER
      - MONITOR_URL=http://monitor-dashboard:8000
      - PYTHONPATH=/app
    networks:
      - agent-network
    depends_on:
      - monitor-dashboard

  # Agent 5 - Monitor Agent
  agent-5:
    image: agent_monitor-test-agent:latest
    command: python agent_production_deployment.py
    restart: unless-stopped
    environment:
      - AGENT_NAME=ðŸ“¡ Monitor Agent
      - AGENT_TYPE=MONITOR_AGENT
      - WORKLOAD_TYPE=standard
      - AGENT_ENVIRONMENT=DOCKER
      - MONITOR_URL=http://monitor-dashboard:8000
      - PYTHONPATH=/app
    networks:
      - agent-network
    depends_on:
      - monitor-dashboard

networks:
  agent-network:
    driver: bridge

volumes:
  agent_data:
    driver: local