# Multi-stage Docker setup for Agent Monitor Framework
# Uses local Python installation to bypass network issues

version: '3.8'

services:
  # Monitor Dashboard Service
  monitor-app:
    build:
      context: .
      dockerfile: Dockerfile.local-build
    container_name: agent-monitor-dashboard
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=sqlite:///./data/agent_monitor.db
      - LOG_LEVEL=INFO
      - HOST=0.0.0.0
      - PORT=8000
    volumes:
      - ./data:/app/data
      - ./web:/app/web
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/api/v1/system/status')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - agent-network

  # Agent Container 1 - LLM Agent
  llm-agent-1:
    build:
      context: .  
      dockerfile: Dockerfile.local-build
    container_name: llm-agent-1
    environment:
      - MONITOR_URL=http://monitor-app:8000
      - AGENT_NAME=Containerized LLM Agent 1
      - AGENT_TYPE=llm_agent
      - WORKLOAD_TYPE=llm
      - AGENT_VERSION=1.0.0
      - AGENT_ENVIRONMENT=container
      - LOG_LEVEL=INFO
    command: ["python", "simple_container_agent.py"]
    depends_on:
      monitor-app:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - agent-network

  # Agent Container 2 - API Agent
  api-agent-1:
    build:
      context: .
      dockerfile: Dockerfile.local-build
    container_name: api-agent-1
    environment:
      - MONITOR_URL=http://monitor-app:8000
      - AGENT_NAME=Containerized API Agent 1
      - AGENT_TYPE=api_agent
      - WORKLOAD_TYPE=api
      - AGENT_VERSION=1.0.0
      - AGENT_ENVIRONMENT=container
      - LOG_LEVEL=INFO
    command: ["python", "simple_container_agent.py"]
    depends_on:
      monitor-app:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - agent-network

  # Agent Container 3 - Data Agent
  data-agent-1:
    build:
      context: .
      dockerfile: Dockerfile.local-build
    container_name: data-agent-1
    environment:
      - MONITOR_URL=http://monitor-app:8000
      - AGENT_NAME=Containerized Data Agent 1
      - AGENT_TYPE=data_agent
      - WORKLOAD_TYPE=data
      - AGENT_VERSION=1.0.0
      - AGENT_ENVIRONMENT=container
      - LOG_LEVEL=INFO
    command: ["python", "simple_container_agent.py"]
    depends_on:
      monitor-app:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - agent-network

  # Agent Container 4 - Monitor Agent
  monitor-agent-1:
    build:
      context: .
      dockerfile: Dockerfile.local-build
    container_name: monitor-agent-1
    environment:
      - MONITOR_URL=http://monitor-app:8000
      - AGENT_NAME=Containerized Monitor Agent 1
      - AGENT_TYPE=monitor_agent
      - WORKLOAD_TYPE=standard
      - AGENT_VERSION=1.0.0
      - AGENT_ENVIRONMENT=container
      - LOG_LEVEL=INFO
    command: ["python", "simple_container_agent.py"]
    depends_on:
      monitor-app:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - agent-network

  # Agent Container 5 - LLM Agent 2
  llm-agent-2:
    build:
      context: .
      dockerfile: Dockerfile.local-build
    container_name: llm-agent-2
    environment:
      - MONITOR_URL=http://monitor-app:8000
      - AGENT_NAME=Containerized LLM Agent 2
      - AGENT_TYPE=llm_agent
      - WORKLOAD_TYPE=llm
      - AGENT_VERSION=1.0.0
      - AGENT_ENVIRONMENT=container
      - LOG_LEVEL=INFO
    command: ["python", "simple_container_agent.py"]
    depends_on:
      monitor-app:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - agent-network

volumes:
  agent_data:
    driver: local

networks:
  agent-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16