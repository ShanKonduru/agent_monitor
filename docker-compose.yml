version: '3.8'

services:
  # Main monitoring service
  monitor:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://monitor:password@postgres:5432/agent_monitor
      - LOG_LEVEL=INFO
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/system/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: agent_monitor
      POSTGRES_USER: monitor
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U monitor -d agent_monitor"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Example agent
  example-agent:
    build:
      context: .
      dockerfile: docker/agent.Dockerfile
    environment:
      - MONITOR_URL=http://monitor:8000
      - AGENT_NAME=Development Agent
      - AGENT_TYPE=llm_agent
      - WORKLOAD_TYPE=standard
      - AGENT_VERSION=1.0.0
      - AGENT_ENVIRONMENT=development
      - LOG_LEVEL=INFO
    command: ["python", "example_agent.py"]
    depends_on:
      - monitor
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
